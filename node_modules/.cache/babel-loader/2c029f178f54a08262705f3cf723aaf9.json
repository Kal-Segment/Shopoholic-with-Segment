{"ast":null,"code":"import phones from \"./mockPhones\";\nimport R from \"ramda\";\nimport mockCategories from \"./mockCategories\";\nexport const fetchPhones = async () => {\n  return new Promise(resolve => {\n    resolve(phones);\n  }); // const {body} = await request.get('http://www.mocky.io/v2/5918b9461200001f1040dbeb');\n  // return body.phones;\n};\nexport const loadMore = async ({\n  offset\n}) => {\n  return new Promise(resolve => {\n    resolve(phones);\n  });\n};\nexport const fetchPhoneById = async id => {\n  return new Promise((resolve, reject) => {\n    console.log(\"Id in api fetchPhones \", id);\n    const phone = R.find(R.propEq(\"id\", id), phones);\n    resolve(phone);\n  });\n};\nexport const fetchCategories = async () => {\n  return new Promise(resolve => {\n    resolve(mockCategories);\n  });\n};","map":{"version":3,"sources":["/Users/kal.kolacahill/Shopoholic-with-Segment/src/api/fetchPhones.js"],"names":["phones","R","mockCategories","fetchPhones","Promise","resolve","loadMore","offset","fetchPhoneById","id","reject","console","log","phone","find","propEq","fetchCategories"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,CAAP,MAAc,OAAd;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAY;AACrC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACL,MAAD,CAAP;AACD,GAFM,CAAP,CADqC,CAKrC;AACA;AACD,CAPM;AASP,OAAO,MAAMM,QAAQ,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC5C,SAAO,IAAIH,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACL,MAAD,CAAP;AACD,GAFM,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,cAAc,GAAG,MAAOC,EAAP,IAAc;AAC1C,SAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUK,MAAV,KAAqB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,EAAtC;AACA,UAAMI,KAAK,GAAGZ,CAAC,CAACa,IAAF,CAAOb,CAAC,CAACc,MAAF,CAAS,IAAT,EAAeN,EAAf,CAAP,EAA2BT,MAA3B,CAAd;AACAK,IAAAA,OAAO,CAACQ,KAAD,CAAP;AACD,GAJM,CAAP;AAKD,CANM;AAQP,OAAO,MAAMG,eAAe,GAAG,YAAY;AACzC,SAAO,IAAIZ,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACH,cAAD,CAAP;AACD,GAFM,CAAP;AAGD,CAJM","sourcesContent":["import phones from \"./mockPhones\";\r\nimport R from \"ramda\";\r\nimport mockCategories from \"./mockCategories\";\r\n\r\nexport const fetchPhones = async () => {\r\n  return new Promise((resolve) => {\r\n    resolve(phones);\r\n  });\r\n\r\n  // const {body} = await request.get('http://www.mocky.io/v2/5918b9461200001f1040dbeb');\r\n  // return body.phones;\r\n};\r\n\r\nexport const loadMore = async ({ offset }) => {\r\n  return new Promise((resolve) => {\r\n    resolve(phones);\r\n  });\r\n};\r\n\r\nexport const fetchPhoneById = async (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"Id in api fetchPhones \", id);\r\n    const phone = R.find(R.propEq(\"id\", id), phones);\r\n    resolve(phone);\r\n  });\r\n};\r\n\r\nexport const fetchCategories = async () => {\r\n  return new Promise((resolve) => {\r\n    resolve(mockCategories);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}