{"ast":null,"code":"import R from\"ramda\";export var getPhonesById=function getPhonesById(state,id){return R.prop(id,state.phone);};export var getActiveCategoryId=function getActiveCategoryId(ownProps){// console.log(\"ownProps \" , ownProps);\nreturn R.path([\"params\",\"id\"],ownProps);};export var getPhones=function getPhones(state,ownProps){// const phones = R.map(id=>getPhonesById(state,id),state.PhonesPage.ids);\n// return phones;\nvar activeCategoryId=getActiveCategoryId(ownProps);// console.log(\"activeCategoryId \" , activeCategoryId);\nvar applyCategory=function applyCategory(item){// console.log(\"Item \", item);\nreturn R.equals(activeCategoryId,R.prop(\"categoryId\",item));};var applySearch=function applySearch(item){return R.contains(state.PhonesPage.search,R.prop(\"name\",item));};var phones=R.compose(R.filter(applySearch),R.when(R.always(activeCategoryId),R.filter(applyCategory)),R.map(function(id){return getPhonesById(state,id);}))(state.PhonesPage.ids);return phones;};export var getRenderedPhonesLength=function getRenderedPhonesLength(state){return R.length(state.PhonesPage.ids);};export var getTotalBasketPrice=function getTotalBasketPrice(state){var phones=R.map(function(id){return getPhonesById(state,id);},state.Basket);var total=0;return phones.reduce(function(total,phone){return Math.round((total+phone.price)*state.Coupon.invertedDiscount*100)/100;},total);};export var getTotalBasketCount=function getTotalBasketCount(state){return state.Basket.length;};export var getCategories=function getCategories(state){// console.log(\" fething categories from state \" ,R.values(state.Categories));\nreturn R.values(state.Categories);};export var getBasketPhonesWithCount=function getBasketPhonesWithCount(state){var uniqueIds=R.uniq(state.Basket);var phoneCount=function phoneCount(id){return R.compose(R.length,R.filter(function(basketId){return R.equals(id,basketId);}))(state.Basket);};var phoneWithCount=function phoneWithCount(phone){return R.assoc(\"count\",phoneCount(phone.id),phone);};var phones=R.compose(R.map(phoneWithCount),R.map(function(id){return getPhonesById(state,id);}))(uniqueIds);console.log(\"Phones in basket are \",phones);return phones;};","map":{"version":3,"sources":["/Users/kal.kolacahill/Shopoholic WebApp/src/selectors/Phones.js"],"names":["R","getPhonesById","state","id","prop","phone","getActiveCategoryId","ownProps","path","getPhones","activeCategoryId","applyCategory","item","equals","applySearch","contains","PhonesPage","search","phones","compose","filter","when","always","map","ids","getRenderedPhonesLength","length","getTotalBasketPrice","Basket","total","reduce","Math","round","price","Coupon","invertedDiscount","getTotalBasketCount","getCategories","values","Categories","getBasketPhonesWithCount","uniqueIds","uniq","phoneCount","basketId","phoneWithCount","assoc","console","log"],"mappings":"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","sourcesContent":["import R from \"ramda\";\r\n\r\nexport const getPhonesById = (state, id) => R.prop(id, state.phone);\r\n\r\nexport const getActiveCategoryId = (ownProps) => {\r\n  // console.log(\"ownProps \" , ownProps);\r\n  return R.path([\"params\", \"id\"], ownProps);\r\n};\r\n\r\nexport const getPhones = (state, ownProps) => {\r\n  // const phones = R.map(id=>getPhonesById(state,id),state.PhonesPage.ids);\r\n  // return phones;\r\n\r\n  const activeCategoryId = getActiveCategoryId(ownProps);\r\n  // console.log(\"activeCategoryId \" , activeCategoryId);\r\n  const applyCategory = (item) => {\r\n    // console.log(\"Item \", item);\r\n    return R.equals(activeCategoryId, R.prop(\"categoryId\", item));\r\n  };\r\n  const applySearch = (item) => {\r\n    return R.contains(state.PhonesPage.search, R.prop(\"name\", item));\r\n  };\r\n  const phones = R.compose(\r\n    R.filter(applySearch),\r\n    R.when(R.always(activeCategoryId), R.filter(applyCategory)),\r\n    R.map((id) => getPhonesById(state, id))\r\n  )(state.PhonesPage.ids);\r\n  return phones;\r\n};\r\n\r\nexport const getRenderedPhonesLength = (state) =>\r\n  R.length(state.PhonesPage.ids);\r\n\r\nexport const getTotalBasketPrice = (state) => {\r\n  const phones = R.map((id) => getPhonesById(state, id), state.Basket);\r\n  let total = 0;\r\n  return phones.reduce((total, phone) => {\r\n    return (\r\n      Math.round((total + phone.price) * state.Coupon.invertedDiscount * 100) /\r\n      100\r\n    );\r\n  }, total);\r\n};\r\n\r\nexport const getTotalBasketCount = (state) => {\r\n  return state.Basket.length;\r\n};\r\n\r\nexport const getCategories = (state) => {\r\n  // console.log(\" fething categories from state \" ,R.values(state.Categories));\r\n  return R.values(state.Categories);\r\n};\r\n\r\nexport const getBasketPhonesWithCount = (state) => {\r\n  const uniqueIds = R.uniq(state.Basket);\r\n\r\n  const phoneCount = (id) => {\r\n    return R.compose(\r\n      R.length,\r\n      R.filter((basketId) => R.equals(id, basketId))\r\n    )(state.Basket);\r\n  };\r\n  const phoneWithCount = (phone) => {\r\n    return R.assoc(\"count\", phoneCount(phone.id), phone);\r\n  };\r\n  const phones = R.compose(\r\n    R.map(phoneWithCount),\r\n    R.map((id) => getPhonesById(state, id))\r\n  )(uniqueIds);\r\n  console.log(\"Phones in basket are \", phones);\r\n  return phones;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}