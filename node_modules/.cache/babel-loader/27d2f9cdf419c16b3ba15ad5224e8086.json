{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kal.kolacahill/Downloads/simple-ecommerce-web-lt-master/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kal.kolacahill/Downloads/simple-ecommerce-web-lt-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import phones from\"./mockPhones\";import R from\"ramda\";import mockCategories from\"./mockCategories\";export var fetchPhones=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",new Promise(function(resolve){resolve(phones);}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchPhones(){return _ref.apply(this,arguments);};}();export var loadMore=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2){var offset;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:offset=_ref2.offset;return _context2.abrupt(\"return\",new Promise(function(resolve){resolve(phones);}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function loadMore(_x){return _ref3.apply(this,arguments);};}();export var fetchPhoneById=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",new Promise(function(resolve,reject){console.log(\"Id in api fetchPhones \",id);var phone=R.find(R.propEq(\"id\",id),phones);resolve(phone);}));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchPhoneById(_x2){return _ref4.apply(this,arguments);};}();export var fetchCategories=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",new Promise(function(resolve){resolve(mockCategories);}));case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function fetchCategories(){return _ref5.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/kal.kolacahill/Downloads/simple-ecommerce-web-lt-master/src/api/fetchPhones.js"],"names":["phones","R","mockCategories","fetchPhones","Promise","resolve","loadMore","offset","fetchPhoneById","id","reject","console","log","phone","find","propEq","fetchCategories"],"mappings":"+RAAA,MAAOA,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,CAAP,KAAc,OAAd,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,MAAO,IAAMC,CAAAA,WAAW,0FAAG,mKAClB,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BA,OAAO,CAACL,MAAD,CAAP,CACD,CAFM,CADkB,wDAAH,kBAAXG,CAAAA,WAAW,0CAAjB,CASP,MAAO,IAAMG,CAAAA,QAAQ,2FAAG,wJAASC,MAAT,OAASA,MAAT,kCACf,GAAIH,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BA,OAAO,CAACL,MAAD,CAAP,CACD,CAFM,CADe,0DAAH,kBAARM,CAAAA,QAAQ,6CAAd,CAMP,MAAO,IAAME,CAAAA,cAAc,2FAAG,kBAAOC,EAAP,uJACrB,GAAIL,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUK,MAAV,CAAqB,CACtCC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCH,EAAtC,EACA,GAAMI,CAAAA,KAAK,CAAGZ,CAAC,CAACa,IAAF,CAAOb,CAAC,CAACc,MAAF,CAAS,IAAT,CAAeN,EAAf,CAAP,CAA2BT,MAA3B,CAAd,CACAK,OAAO,CAACQ,KAAD,CAAP,CACD,CAJM,CADqB,0DAAH,kBAAdL,CAAAA,cAAc,8CAApB,CAQP,MAAO,IAAMQ,CAAAA,eAAe,2FAAG,yKACtB,GAAIZ,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BA,OAAO,CAACH,cAAD,CAAP,CACD,CAFM,CADsB,0DAAH,kBAAfc,CAAAA,eAAe,2CAArB","sourcesContent":["import phones from \"./mockPhones\";\r\nimport R from \"ramda\";\r\nimport mockCategories from \"./mockCategories\";\r\n\r\nexport const fetchPhones = async () => {\r\n  return new Promise((resolve) => {\r\n    resolve(phones);\r\n  });\r\n\r\n  // const {body} = await request.get('http://www.mocky.io/v2/5918b9461200001f1040dbeb');\r\n  // return body.phones;\r\n};\r\n\r\nexport const loadMore = async ({ offset }) => {\r\n  return new Promise((resolve) => {\r\n    resolve(phones);\r\n  });\r\n};\r\n\r\nexport const fetchPhoneById = async (id) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"Id in api fetchPhones \", id);\r\n    const phone = R.find(R.propEq(\"id\", id), phones);\r\n    resolve(phone);\r\n  });\r\n};\r\n\r\nexport const fetchCategories = async () => {\r\n  return new Promise((resolve) => {\r\n    resolve(mockCategories);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}